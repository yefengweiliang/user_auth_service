<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.user.dao.UserMapper">
    <resultMap id="userMap" type="com.user.entity.vo.UserInfoVo">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <result column="nick_name" property="nickName"/>
        <result column="phone" property="phone"/>
        <result column="level" property="level"/>
    </resultMap>
    <sql id="commonSql">
        id,user_name,password,email,gender,nick_name,phone,level
    </sql>
    <!-- Boolean addUser(UserInfo userInfo); -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        insert into user_info(user_name, password, email, gender, nick_name, phone)
        VALUES (#{userName}, #{password}, #{email}, #{gender}, #{nickName}, #{phone})
    </insert>
    <!-- Boolean batchAddUser(List<UserInfo> userInfos); -->
    <insert id="batchAddUser" parameterType="java.util.List" useGeneratedKeys="false">
        insert into user_info(user_name, password, email, gender, nick_name, phone)
        VALUES
        <foreach collection="userInfos" item="item" index="index" separator=",">
            (
             #{item.userName},
            #{item.password},
            #{item.email},
            #{item.gender},
            #{item.nickName},
            #{item.phone}
            )
        </foreach>
    </insert>

    <!-- UserInfo selectUser(UserInfo userInfo); -->
    <select id="selectUser" resultMap="userMap">
        select
        <include refid="commonSql"/>
        from user_info
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="userName != null and userName != ''">
<!--                <bind name="userName" value="'%'+userName+'%'"/>-->
                and user_name like CONCAT('%',#{userName},'%')
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{password}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
        </where>
    </select>
    <!-- List<UserInfoVo> selectExportUser(ExportUserParameter userInfo); -->
    <select id="selectExportUser" resultMap="userMap">
        select
        <include refid="commonSql"/>
        from user_info
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                <!--                <bind name="userName" value="'%'+userName+'%'"/>-->
                and user_name like CONCAT('%',#{userName},'%')
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{password}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
        </where>
    </select>
    <!-- Boolean updateUser(UserInfo userInfo); -->
    <update id="updateUser">
        update user_info
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email !=''">
                email = #{password},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="level != null">
                level = #{level}
            </if>
        </set>
        <where>
                id = #{id}
        </where>
    </update>
	<!--Boolean deleteUserById(@Param("id") Long id);-->
	<delete id="deleteUserById">
		delete from user_info
		<where>
			id = #{id}
		</where>
	</delete>
    <!-- List<UserInfoVo> selectUserByNameOrId(@Param("userName") String userName, @Param("id") long id); -->
    <select id="selectUserByNameOrId" resultMap="userMap">
        select user_name from user_info
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="userName != null">
               and user_name = #{userName}
            </if>
        </where>
    </select>

</mapper>